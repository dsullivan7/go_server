version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.3
  aws-ecr: circleci/aws-ecr@7.0.0
  aws-ecs: circleci/aws-ecs@2.2.1

commands:
  aws-assume-role:
    description: Installs AWS CLI, setup the IAM user keys and assume specified role
    parameters:
      role:
        description: Role name
        type: string
    steps:
      - run: |
          temporary_credentials=$(aws sts assume-role --role-arn "arn:aws:iam::${AWS_ACCOUNT_ID}:role/<< parameters.role >>" --role-session-name "ci_session")

          echo "Successfully assumed role"

          aws_access_key_id=$(echo $temp_role | jq .Credentials.AccessKeyId | xargs)
          aws_secret_access_key=$(echo $temp_role | jq .Credentials.SecretAccessKey | xargs)
          aws_session_token=$(echo $temp_role | jq .Credentials.SessionToken | xargs)

          echo "access key id: ${aws_access_key_id}"

          aws configure set aws_access_key_id ${aws_access_key_id}
          aws configure set aws_secret_access_key ${aws_secret_access_key}
          aws configure set aws_session_token ${aws_session_token}

          export AWS_ACCESS_KEY_ID=${aws_access_key_id}
          export AWS_SECRET_ACCESS_KEY=${aws_secret_access_key}
          export AWS_SESSION_TOKEN=${aws_session_token}

jobs:
  test:
    machine:
      image: ubuntu-2004:202104-01
    working_directory: ~/data
    steps:
      - checkout
      - run: make db-start
      - run: make db-init
      - run: make db-migrate
      - run: make test

  build:
    machine:
      image: ubuntu-2004:202104-01
    working_directory: ~/data
    steps:
      - checkout
      - run: make build
      - persist_to_workspace:
          root: .
          paths:
            - bin
            - Dockerfile.app

  deploy:
    executor: aws-cli/default
    working_directory: ~/data
    environment:
      AWS_REGION: us-east-2
      AWS_ACCOUNT_ID: '408204130528'
      AWS_ECR_ACCOUNT_URL: 408204130528.dkr.ecr.us-east-2.amazonaws.com
    steps:
      - attach_workspace:
          at: ~/data
      - aws-cli/setup:
          aws-region: AWS_REGION
      - aws-assume-role:
          role: 'SunburstDevAdmin'
      - aws-ecr/build-and-push-image:
          checkout: false
          repo: tchr-voice-app
          tag: ${CIRCLE_SHA1}
          dockerfile: Dockerfile.app

workflows:
  test:
    jobs:
      - test
      - build
      - deploy:
          requires:
            - build
